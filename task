---- create table


CREATE TABLE clients(
    id NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    name VARCHAR(255) NULL,
    surname VARCHAR(255) NULL,
    birthday DATE,
    age INTEGER NULL,
    created_date TIMESTAMP DEFAULT SYSDATE,
    modifield_date TIMESTAMP(0),
    PRIMARY KEY(id)
);

---create packege 



CREATE OR REPLACE NONEDITIONABLE PACKAGE CLIENT_MANAGER as

PROCEDURE add_client(i_name in clients.name%TYPE,
I_surname in  clients.surname%TYPE,
i_birthday in clients.birthday%TYPE,
  i_age in clients.age%TYPE);


PROCEDURE edit_client(i_name in clients.name%TYPE,
I_surname in  clients.surname%TYPE,
i_birthday in clients.birthday%TYPE,
  i_age in clients.age%TYPE,
  i_id in clients.id %TYPE);

  PROCEDURE delete_client(
  i_id in clients.id %TYPE);

   PROCEDURE get_client_by_id(
  i_id in clients.id%TYPE);

  PROCEDURE get_client_by_filter(
i_id in clients.id%TYPE,
i_name in clients.name%TYPE,
i_surname in clients.surname%TYPE,
from_date in clients.birthday%TYPE,
too_date in clients.birthday%TYPE,
o_client OUT SYS_REFCURSOR
);

end CLIENT_MANAGER;


insert into clients(name,surname,birthday,age)VALUES('Azizbek','Abdulaxatov','24-oct-01',21);
insert into clients(name,surname,birthday,age)VALUES('Bobur','Xasannov','14-feb-01',21);
insert into clients(name,surname,birthday,age)VALUES('Komiljon','Maxamataliyev','15-may-01',21);

-----                   EDIT CLIENT PROCEDURE 
create or replace NONEDITIONABLE PROCEDURE edit_client(i_name in clients.name%TYPE,
I_surname in  clients.surname%TYPE,
i_birthday in clients.birthday%TYPE,
  i_age in clients.age%TYPE,
  i_id in clients.id %TYPE)
    as
    code NUMBER;
    BEGIN 

    UPDATE clients c SET c.name=i_name,c.surname=i_surname,c.birthday=i_birthday,
    c.age=i_age,c.modifield_date=SYSDATE WHERE c.id=i_id;
    code:=SQLCODE;
 COMMIT;
IF code =1 THEN
 DBMS_OUTPUT.PUT_LINE('client edited  '||'code=>  '||code);

ELSE 
DBMS_OUTPUT.PUT_LINE('client not found  '||'code=>  '||code);
end if;
 EXCEPTION
  WHEN OTHERS THEN 
  DBMS_OUTPUT.PUT_LINE('hatolik !');
END;

---call this procedure 

BEGIN
edit_client('ohirisi','test ','20-dec-2001',35,5);
end;



-----                   ADD CLIENT PROCEDURE 

create or replace  PROCEDURE add_client(i_name in clients.name%TYPE,
i_surname in  clients.surname%TYPE,
i_birthday in clients.birthday%TYPE,
  i_age in clients.age%TYPE)
    as
       code NUMBER;
       max_id  clients.id%TYPE;
    BEGIN 
    
 INSERT INTO clients (name,surname,birthday,age) VALUES (i_name,i_surname,i_birthday,i_age);
 code:=SQLCODE;
 COMMIT;
 SELECT MAX(id) INTO max_id FROM clients;
 SELECT TO_CHAR(max_id) INTO max_id FROM DUAL;
 IF code =0 THEN
 DBMS_OUTPUT.PUT_LINE('client saved  '||'id: ' || max_id || '   code=> '||code);
 ELSE 
  DBMS_OUTPUT.PUT_LINE('client not saved  '|| '    code=> '||code);
 end IF;
 EXCEPTION
  WHEN OTHERS THEN 
  DBMS_OUTPUT.PUT_LINE('hatolik !');
END;

set SERVEROUT ON;

BEGIN
add_client('ohirisi','test ','20-dec-2001',35);
end;



-----                   DELETE CLIENT PROCEDURE 


create or replace  PROCEDURE delete_client(
  i_id in clients.id %TYPE)
    as
    code number;
    BEGIN 
    
    DELETE clients c WHERE c.id=i_id;
    code:=SQLCODE;
    if code=1 THEN
     DBMS_OUTPUT.PUT_LINE('client delete'|| '   code=> '||code);
      ELSE
      DBMS_OUTPUT.PUT_LINE ('client not found '|| '   code=> '||code);
      END IF;
 EXCEPTION
       
  WHEN OTHERS THEN 
  code:=0;
  DBMS_OUTPUT.PUT_LINE('hatolik !'|| '   code=> '||code);
END;

--- call this procedure

BEGIN
delete_client(2);
end;


-----                   GET CLIENT BY ID WITH PROCEDURE

ccreate or replace  PROCEDURE get_client_by_id(
  i_id in clients.id%TYPE)
    as
    o_client clients%rowType;
    code NUMBER;
    BEGIN 
    SELECT * INTO o_client  FROM clients c where c.id=i_id;
    code:=1;
    
 DBMS_OUTPUT.PUT_LINE('client ==> '||o_client.name ||' '||o_client.surname||'
 age= '||o_client.age||'  birthday= '||o_client.birthday || '   code=> '||code);
 
 EXCEPTION
 WHEN no_data_found THEN
 code:=0;
 DBMS_OUTPUT.PUT_LINE('client not found'|| '   code=> '||code);
 code:=0;
  WHEN OTHERS THEN 
  DBMS_OUTPUT.PUT_LINE('hatolik !'|| '  code=> '||code);
END;


BEGIN
get_client_by_id(3000);
end;
   

---   GET CLIENT BY FILTER 
CREATE or REPLACE PROCEDURE get_client_by_filter(
i_id in clients.id%TYPE,
i_name in clients.name%TYPE,
i_surname in clients.surname%TYPE,
from_date in clients.birthday%TYPE,
too_date in clients.birthday%TYPE,
o_client OUT SYS_REFCURSOR

)
as 
code number;
begin 
    IF i_id is NOT NULL or i_name IS NOT NULL or i_surname IS NOT NULL or from_date IS
     NOT NULL or too_date IS NOT NULL THEN 
     OPEN o_client FOR 
        SELECT id,name,surname,birthday,age from clients where id=i_id 
        UNION 
        SELECT id,name,surname,birthday,age from clients where i_name is NOT NULL and name LIKE '%'||i_name||'%'
        UNION 
        SELECT id,name,surname,birthday,age from clients where i_surname is not null and surname LIKE '%'||i_surname ||'%'
        UNION 
        SELECT id,name,surname,birthday,age from clients where from_date is not NULL and too_date is NOT null and 
        birthday BETWEEN from_date and too_date ;
        code:=SQLCODE;
        DBMS_OUTPUT.put_line('clients list by filter '||'code=> '||code);
        DBMS_OUTPUT.PUT_LINE('ID  '||'Name'||'     Surname'||'    Birthday'||'     age');
        
       ELSE
      OPEN o_client FOR
        SELECT  id,name,surname,birthday,age FROM clients ORDER BY id;
        DBMS_OUTPUT.put_line('clients list');
        DBMS_OUTPUT.PUT_LINE('ID  '||'Name'||'     Surname'||'    Birthday'||'     age');
        code:=SQLCODE;
        END IF;
        
        EXCEPTION WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('hatolik');
        code:=SQLCODE;
end;




 DECLARE
l_cursor SYS_REFCURSOR;
 code NUMBER;
 id clients.id%TYPE;
 name clients.name%TYPE;
 surname clients.surname%TYPE;
 birthday clients.birthday%TYPE;
 age clients.age%TYPE;
 
 BEGIN 
   get_client_by_filter( i_id=>NULL,i_name=>null,i_surname=>null,from_date=>NULL,too_date=>null,o_client=>l_cursor,code=>code );
LOOP
    FETCH l_cursor INTO 
    id,name,surname,birthday,age;
    EXIT WHEN l_cursor%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(id || ' | ' || name || ' | '|| surname|| '  |  '|| birthday || '  |  ' || age);
  END LOOP;
    
    DBMS_OUTPUT.PUT_LINE('code=> '|| code);
end;
